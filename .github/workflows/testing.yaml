---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# Action test/validation workflow
name: "Test GitHub Action üß™"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions: {}

jobs:
  ### Test the GitHub Action in this Repository ###
  tests:
    name: "Test local GitHub Action"
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Perform setup prior to running test(s)
      - name: "Checkout sample project repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: "lfreleng-actions/test-python-project"
          path: "test-python-project"

      # Perform test build
      - name: "Run action: ${{ github.repository }} [Standard build]"
        uses: ./
        with:
          path_prefix: "test-python-project"

      # Perform test build again with TOX
      - name: "Run action: ${{ github.repository }} [Build using TOX]"
        uses: ./
        with:
          path_prefix: "test-python-project"
          purge_artefact_path: true
          tox_build: true

      # Build with explicit versioning
      - name: "Run action: ${{ github.repository }} [Explicit versioning]"
        uses: ./
        with:
          path_prefix: "test-python-project/"
          purge_artefact_path: true
          tag: "v2.0.0"
          artefact_path: "explicit_tag"

      - name: "Validate artefacts from above build"
        shell: bash
        run: |
          # Validate artefacts from above build
          if (find 'test-python-project/explicit_tag' -name '*2.0.0*'); then
            echo "Explicit tag/artefact path as expected ‚úÖ"
          else
            echo "Error: build artefact validation failed ‚ùå"; exit 1
          fi
